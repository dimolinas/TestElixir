[2024-05-02 03:06:21,018] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2024-05-02 03:07:05,833] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-02 03:07:05,868] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2024-05-02 03:07:05,872] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-05-02 03:07:05,897] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-05-02 03:07:05,902] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-05-02 03:07:05,904] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-05-02 03:07:05,936] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 84) (kafka.controller.KafkaController)
[2024-05-02 03:07:05,963] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-05-02 03:07:05,976] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-05-02 03:07:06,013] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-05-02 03:07:06,013] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2024-05-02 03:07:06,013] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2024-05-02 03:07:06,021] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-05-02 03:07:06,023] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-05-02 03:07:06,023] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-05-02 03:07:06,024] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-05-02 03:07:06,028] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-05-02 03:07:06,034] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2024-05-02 03:07:06,037] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-05-02 03:07:06,095] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-05-02 03:07:06,095] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-05-02 03:07:06,109] INFO [RequestSendThread controllerId=0] Controller 0 connected to educative:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-05-02 03:07:06,114] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-05-02 03:07:06,114] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2024-05-02 03:07:06,115] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-05-02 03:07:06,115] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-05-02 03:07:06,133] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2024-05-02 03:07:06,133] INFO [Controller id=0] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2024-05-02 03:07:06,147] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-05-02 03:07:06,147] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-05-02 03:07:06,147] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-05-02 03:07:06,148] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-05-02 03:07:06,189] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-05-02 03:07:06,214] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-05-02 03:07:11,216] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-02 03:07:11,216] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-02 03:07:41,444] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-05-02 03:07:41,444] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-05-02 03:07:41,445] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2024-05-02 03:07:41,448] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2024-05-02 03:07:42,865] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-02 03:07:42,865] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-02 03:07:42,866] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-02 03:07:42,866] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-05-02 03:07:42,866] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-05-02 03:07:42,873] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-05-02 03:07:42,873] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-05-02 03:07:42,874] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-05-02 03:07:42,874] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-05-02 03:07:42,877] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-05-02 03:07:42,879] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-05-02 03:08:46,663] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2024-05-02 03:09:42,885] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-02 03:09:42,944] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2024-05-02 03:09:42,950] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-05-02 03:09:42,955] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-05-02 03:09:42,961] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-05-02 03:09:42,966] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-05-02 03:09:43,008] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 103) (kafka.controller.KafkaController)
[2024-05-02 03:09:43,039] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-05-02 03:09:43,054] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-05-02 03:09:43,089] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-05-02 03:09:43,089] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2024-05-02 03:09:43,089] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2024-05-02 03:09:43,090] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-05-02 03:09:43,095] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-05-02 03:09:43,095] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-05-02 03:09:43,096] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-05-02 03:09:43,097] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-05-02 03:09:43,097] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2024-05-02 03:09:43,099] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-05-02 03:09:43,156] INFO [RequestSendThread controllerId=0] Controller 0 connected to educative:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-05-02 03:09:43,169] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-05-02 03:09:43,169] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-05-02 03:09:43,176] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-05-02 03:09:43,176] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2024-05-02 03:09:43,177] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-05-02 03:09:43,177] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-05-02 03:09:43,180] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2024-05-02 03:09:43,180] INFO [Controller id=0] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2024-05-02 03:09:43,211] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-05-02 03:09:43,212] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-05-02 03:09:43,212] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-05-02 03:09:43,212] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-05-02 03:09:43,251] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-05-02 03:09:43,289] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-05-02 03:09:48,290] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-02 03:09:48,291] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-02 03:11:55,842] INFO [Controller id=0] New topics: [Set(topic_1)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic_1,Some(-7H9OkMrTBqwdKdSo_AAZw),Map(topic_1-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-05-02 03:11:55,843] INFO [Controller id=0] New partition creation callback for topic_1-0 (kafka.controller.KafkaController)
[2024-05-02 03:12:28,238] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(L2kkCd3rS2acxv7vIbArhw),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-05-02 03:12:28,238] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2024-05-02 03:14:48,293] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-02 03:14:48,293] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-02 03:14:48,296] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-05-02 03:14:48,298] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-05-02 03:18:32,675] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-05-02 03:18:32,675] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-05-02 03:18:32,675] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2024-05-02 03:18:32,679] TRACE [Controller id=0] All leaders = __consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),topic_1-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5) (kafka.controller.KafkaController)
[2024-05-02 03:18:34,024] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-02 03:18:34,025] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-02 03:18:34,025] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-02 03:18:34,026] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-05-02 03:18:34,026] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-05-02 03:18:34,033] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-05-02 03:18:34,034] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-05-02 03:18:34,035] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-05-02 03:18:34,035] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-05-02 03:18:34,035] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-05-02 03:18:34,041] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-05-02 03:27:43,928] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@46f5f779, name=log4j:logger=kafka.controller (kafka.controller)
[2024-05-02 03:28:22,269] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-05-02 03:28:22,334] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-05-02 03:28:22,349] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2024-05-02 03:28:22,446] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-05-02 03:28:22,452] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-05-02 03:28:22,455] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-05-02 03:28:22,460] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-05-02 03:28:22,509] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 25) (kafka.controller.KafkaController)
[2024-05-02 03:28:22,542] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-05-02 03:28:22,558] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-05-02 03:28:22,588] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-05-02 03:28:22,589] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2024-05-02 03:28:22,589] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2024-05-02 03:28:22,589] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-05-02 03:28:22,592] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-05-02 03:28:22,603] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-05-02 03:28:22,604] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-05-02 03:28:22,604] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-05-02 03:28:22,609] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2024-05-02 03:28:22,609] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-05-02 03:28:22,657] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-05-02 03:28:22,657] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-05-02 03:28:22,665] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-05-02 03:28:22,665] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2024-05-02 03:28:22,665] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-05-02 03:28:22,666] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-05-02 03:28:22,673] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2024-05-02 03:28:22,673] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-05-02 03:28:22,675] INFO [RequestSendThread controllerId=0] Controller 0 connected to educative:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-05-02 03:28:22,743] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-05-02 03:28:22,743] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-05-02 03:28:22,743] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-05-02 03:28:22,743] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-05-02 03:28:22,781] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-05-02 03:28:22,812] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-05-02 03:28:27,813] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-02 03:28:27,813] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-02 03:30:01,985] INFO [Controller id=0] New topics: [Set(topic_1)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic_1,Some(eZXy2krTSg-zkGEZPBNLNg),Map(topic_1-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-05-02 03:30:01,986] INFO [Controller id=0] New partition creation callback for topic_1-0 (kafka.controller.KafkaController)
[2024-05-02 03:30:59,542] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(yKwqGjEmQEKB1EcCUVzX6w),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-05-02 03:30:59,542] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2024-05-02 03:33:27,817] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-02 03:33:27,818] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-02 03:33:27,826] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-05-02 03:33:27,827] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-05-02 03:38:27,827] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-05-02 03:38:27,827] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-05-02 03:38:27,829] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-05-02 03:38:27,829] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
